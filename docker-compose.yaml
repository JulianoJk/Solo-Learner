version: '3.8'
services:
  mongodb:
    image: mongo:latest # use the latest image.
    container_name: mongodb
    restart: unless-stopped
    environment: # set required env variables to access mongo
      MONGO_INITDB_DATABASE: fromInit
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes: # optional to preserve database after container is deleted.
      - ./database-data:/data/db
      - ./back-end/.env:/usr/src/app/back_end/.env
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      # Login with root
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
  front-end:
      build: ./front-end
      container_name: front_end_c
      ports:
        - '3000:3000'
      stdin_open: true
      tty: true
      volumes:
       - ./front-end:/app/front_end
       - /usr/src/app/front-end/node_modules
  back-end:
    build: ./back-end
    container_name: back_end_c
    volumes:
      - /usr/src/app/back-end/node_modules
      - /app/back-end/node_modules
    ports:
    # Port that can be accessed from outside docker or anywhere
        - '3001:3001'
    env_file:
      - ./back-end/.env

  # Opem mongodb in bash
  # docker exec -it mongodb bash
  # mongosh "mongodb://localhost:27017" --username root --password root --authenticationDatabase admin%  