networks:
  my-network:
    driver: bridge

services:
  db:
    env_file:
      - .env
    build: ./back-end/database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: "Europe/Athens"
    volumes:
      - ./back-end/database/data:/var/lib/mysql
      - ./back-end/database:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - my-network

  backend:
    platform: linux/amd64
    env_file:
      - .env
    build:
      context: ./back-end/backend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    volumes:
      - ./back-end/backend/output:/app/output
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CONNECTION_STRING: ${CONNECTION_STRING}
      JWT_KEY: ${JWT_KEY}
      JWT_EXPIRES_IN_MINUTES: ${JWT_EXPIRES_IN_MINUTES}
      TEACHER_EMAIL: ${TEACHER_EMAIL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      TZ: "Europe/Athens"
      IP_ADDRESS: ${IP_ADDRESS}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    depends_on:
      - db
    networks:
      - my-network

  # front-end:
  #   build: ./front-end
  #   container_name: front_end_c
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     TZ: "Europe/Athens"
  #     VITE_IP_ADDRESS: ${IP_ADDRESS}
  #   volumes:
  #     - ./front-end:/usr/src/app/front_end
  #     - /usr/src/app/front_end/node_modules
  #   networks:
  #     - my-network
